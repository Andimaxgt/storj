// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: types.proto

package macaroon

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	_ "github.com/golang/protobuf/ptypes/timestamp"
	math "math"
	time "time"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf
var _ = time.Kitchen

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

type Action_Operation int32

const (
	Action_UNSET  Action_Operation = 0
	Action_READ   Action_Operation = 1
	Action_WRITE  Action_Operation = 2
	Action_LIST   Action_Operation = 3
	Action_DELETE Action_Operation = 4
)

var Action_Operation_name = map[int32]string{
	0: "UNSET",
	1: "READ",
	2: "WRITE",
	3: "LIST",
	4: "DELETE",
}

var Action_Operation_value = map[string]int32{
	"UNSET":  0,
	"READ":   1,
	"WRITE":  2,
	"LIST":   3,
	"DELETE": 4,
}

func (x Action_Operation) String() string {
	return proto.EnumName(Action_Operation_name, int32(x))
}

func (Action_Operation) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_d938547f84707355, []int{1, 0}
}

type Caveat struct {
	// if any of these three are set, disallow that type of access
	DisallowReads   bool `protobuf:"varint,1,opt,name=disallow_reads,json=disallowReads,proto3" json:"disallow_reads,omitempty"`
	DisallowWrites  bool `protobuf:"varint,2,opt,name=disallow_writes,json=disallowWrites,proto3" json:"disallow_writes,omitempty"`
	DisallowLists   bool `protobuf:"varint,3,opt,name=disallow_lists,json=disallowLists,proto3" json:"disallow_lists,omitempty"`
	DisallowDeletes bool `protobuf:"varint,4,opt,name=disallow_deletes,json=disallowDeletes,proto3" json:"disallow_deletes,omitempty"`
	// if one of these two lists are not empty, restrict accesses
	// to the given values
	Buckets               [][]byte `protobuf:"bytes,10,rep,name=buckets,proto3" json:"buckets,omitempty"`
	EncryptedPathPrefixes [][]byte `protobuf:"bytes,11,rep,name=encrypted_path_prefixes,json=encryptedPathPrefixes,proto3" json:"encrypted_path_prefixes,omitempty"`
	// if set, the validity time window
	NotAfter             *time.Time `protobuf:"bytes,20,opt,name=not_after,json=notAfter,proto3,stdtime" json:"not_after,omitempty"`
	NotBefore            *time.Time `protobuf:"bytes,21,opt,name=not_before,json=notBefore,proto3,stdtime" json:"not_before,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Caveat) Reset()         { *m = Caveat{} }
func (m *Caveat) String() string { return proto.CompactTextString(m) }
func (*Caveat) ProtoMessage()    {}
func (*Caveat) Descriptor() ([]byte, []int) {
	return fileDescriptor_d938547f84707355, []int{0}
}
func (m *Caveat) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Caveat.Unmarshal(m, b)
}
func (m *Caveat) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Caveat.Marshal(b, m, deterministic)
}
func (m *Caveat) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Caveat.Merge(m, src)
}
func (m *Caveat) XXX_Size() int {
	return xxx_messageInfo_Caveat.Size(m)
}
func (m *Caveat) XXX_DiscardUnknown() {
	xxx_messageInfo_Caveat.DiscardUnknown(m)
}

var xxx_messageInfo_Caveat proto.InternalMessageInfo

func (m *Caveat) GetDisallowReads() bool {
	if m != nil {
		return m.DisallowReads
	}
	return false
}

func (m *Caveat) GetDisallowWrites() bool {
	if m != nil {
		return m.DisallowWrites
	}
	return false
}

func (m *Caveat) GetDisallowLists() bool {
	if m != nil {
		return m.DisallowLists
	}
	return false
}

func (m *Caveat) GetDisallowDeletes() bool {
	if m != nil {
		return m.DisallowDeletes
	}
	return false
}

func (m *Caveat) GetBuckets() [][]byte {
	if m != nil {
		return m.Buckets
	}
	return nil
}

func (m *Caveat) GetEncryptedPathPrefixes() [][]byte {
	if m != nil {
		return m.EncryptedPathPrefixes
	}
	return nil
}

func (m *Caveat) GetNotAfter() *time.Time {
	if m != nil {
		return m.NotAfter
	}
	return nil
}

func (m *Caveat) GetNotBefore() *time.Time {
	if m != nil {
		return m.NotBefore
	}
	return nil
}

type Action struct {
	Op                   Action_Operation `protobuf:"varint,1,opt,name=op,proto3,enum=macaroon.Action_Operation" json:"op,omitempty"`
	Bucket               []byte           `protobuf:"bytes,2,opt,name=bucket,proto3" json:"bucket,omitempty"`
	EncryptedPath        []byte           `protobuf:"bytes,3,opt,name=encrypted_path,json=encryptedPath,proto3" json:"encrypted_path,omitempty"`
	Time                 *time.Time       `protobuf:"bytes,4,opt,name=time,proto3,stdtime" json:"time,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *Action) Reset()         { *m = Action{} }
func (m *Action) String() string { return proto.CompactTextString(m) }
func (*Action) ProtoMessage()    {}
func (*Action) Descriptor() ([]byte, []int) {
	return fileDescriptor_d938547f84707355, []int{1}
}
func (m *Action) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Action.Unmarshal(m, b)
}
func (m *Action) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Action.Marshal(b, m, deterministic)
}
func (m *Action) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Action.Merge(m, src)
}
func (m *Action) XXX_Size() int {
	return xxx_messageInfo_Action.Size(m)
}
func (m *Action) XXX_DiscardUnknown() {
	xxx_messageInfo_Action.DiscardUnknown(m)
}

var xxx_messageInfo_Action proto.InternalMessageInfo

func (m *Action) GetOp() Action_Operation {
	if m != nil {
		return m.Op
	}
	return Action_UNSET
}

func (m *Action) GetBucket() []byte {
	if m != nil {
		return m.Bucket
	}
	return nil
}

func (m *Action) GetEncryptedPath() []byte {
	if m != nil {
		return m.EncryptedPath
	}
	return nil
}

func (m *Action) GetTime() *time.Time {
	if m != nil {
		return m.Time
	}
	return nil
}

func init() {
	proto.RegisterEnum("macaroon.Action_Operation", Action_Operation_name, Action_Operation_value)
	proto.RegisterType((*Caveat)(nil), "macaroon.Caveat")
	proto.RegisterType((*Action)(nil), "macaroon.Action")
}

func init() { proto.RegisterFile("types.proto", fileDescriptor_d938547f84707355) }

var fileDescriptor_d938547f84707355 = []byte{
	// 420 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x92, 0x41, 0x6f, 0xd3, 0x30,
	0x14, 0xc7, 0x49, 0x1a, 0x42, 0xfb, 0xda, 0x8d, 0xc8, 0x62, 0x60, 0xf5, 0xb2, 0xaa, 0x12, 0xa2,
	0x70, 0xc8, 0xa4, 0x81, 0xb8, 0x21, 0xd4, 0xd1, 0x1c, 0x26, 0x55, 0x30, 0x79, 0x41, 0x3b, 0x56,
	0x6e, 0xf3, 0x92, 0x45, 0xa4, 0xb1, 0x65, 0x7b, 0x8c, 0x7d, 0x0b, 0xbe, 0x21, 0x5f, 0x80, 0x8f,
	0xc0, 0x01, 0xd9, 0x59, 0x22, 0xe5, 0xd6, 0x5b, 0xde, 0xff, 0xfd, 0xff, 0xef, 0xd9, 0xbf, 0x18,
	0xc6, 0xe6, 0x41, 0xa2, 0x8e, 0xa5, 0x12, 0x46, 0x90, 0xe1, 0x9e, 0xef, 0xb8, 0x12, 0xa2, 0x9e,
	0x42, 0x21, 0x0a, 0xd1, 0xa8, 0xd3, 0xd3, 0x42, 0x88, 0xa2, 0xc2, 0x33, 0x57, 0x6d, 0xef, 0xf2,
	0x33, 0x53, 0xee, 0x51, 0x1b, 0xbe, 0x97, 0x8d, 0x61, 0xfe, 0xcf, 0x87, 0xf0, 0x0b, 0xff, 0x89,
	0xdc, 0x90, 0xd7, 0x70, 0x9c, 0x95, 0x9a, 0x57, 0x95, 0xb8, 0xdf, 0x28, 0xe4, 0x99, 0xa6, 0xde,
	0xcc, 0x5b, 0x0c, 0xd9, 0x51, 0xab, 0x32, 0x2b, 0x92, 0x37, 0xf0, 0xbc, 0xb3, 0xdd, 0xab, 0xd2,
	0xa0, 0xa6, 0xbe, 0xf3, 0x75, 0xe9, 0x1b, 0xa7, 0xf6, 0xe6, 0x55, 0xa5, 0x36, 0x9a, 0x0e, 0xfa,
	0xf3, 0xd6, 0x56, 0x24, 0x6f, 0x21, 0xea, 0x6c, 0x19, 0x56, 0x68, 0x07, 0x06, 0xce, 0xd8, 0xed,
	0x59, 0x35, 0x32, 0xa1, 0xf0, 0x6c, 0x7b, 0xb7, 0xfb, 0x81, 0x46, 0x53, 0x98, 0x0d, 0x16, 0x13,
	0xd6, 0x96, 0xe4, 0x23, 0xbc, 0xc2, 0x7a, 0xa7, 0x1e, 0xa4, 0xc1, 0x6c, 0x23, 0xb9, 0xb9, 0xdd,
	0x48, 0x85, 0x79, 0xf9, 0x0b, 0x35, 0x1d, 0x3b, 0xe7, 0x49, 0xd7, 0xbe, 0xe2, 0xe6, 0xf6, 0xea,
	0xb1, 0x49, 0x3e, 0xc1, 0xa8, 0x16, 0x66, 0xc3, 0x73, 0x83, 0x8a, 0xbe, 0x98, 0x79, 0x8b, 0xf1,
	0xf9, 0x34, 0x6e, 0x98, 0xc5, 0x2d, 0xb3, 0x38, 0x6d, 0x99, 0x5d, 0x04, 0xbf, 0xff, 0x9c, 0x7a,
	0x6c, 0x58, 0x0b, 0xb3, 0xb4, 0x09, 0xf2, 0x19, 0xc0, 0xc6, 0xb7, 0x98, 0x0b, 0x85, 0xf4, 0xe4,
	0xc0, 0xbc, 0x5d, 0x79, 0xe1, 0x22, 0xf3, 0xbf, 0x1e, 0x84, 0xcb, 0x9d, 0x29, 0x45, 0x4d, 0xde,
	0x81, 0x2f, 0xa4, 0x43, 0x7e, 0x7c, 0x3e, 0x8d, 0xdb, 0xbf, 0x19, 0x37, 0xdd, 0xf8, 0x9b, 0x44,
	0xc5, 0xed, 0x17, 0xf3, 0x85, 0x24, 0x2f, 0x21, 0x6c, 0x6e, 0xee, 0xd0, 0x4f, 0xd8, 0x63, 0x65,
	0x91, 0xf7, 0x31, 0x38, 0xe4, 0x13, 0x76, 0xd4, 0xbb, 0x3d, 0xf9, 0x00, 0x81, 0x7d, 0x07, 0x0e,
	0xf3, 0x21, 0x07, 0x76, 0xee, 0xf9, 0x12, 0x46, 0xdd, 0x29, 0xc8, 0x08, 0x9e, 0x7e, 0xff, 0x7a,
	0x9d, 0xa4, 0xd1, 0x13, 0x32, 0x84, 0x80, 0x25, 0xcb, 0x55, 0xe4, 0x59, 0xf1, 0x86, 0x5d, 0xa6,
	0x49, 0xe4, 0x5b, 0x71, 0x7d, 0x79, 0x9d, 0x46, 0x03, 0x02, 0x10, 0xae, 0x92, 0x75, 0x92, 0x26,
	0x51, 0xb0, 0x0d, 0xdd, 0x8a, 0xf7, 0xff, 0x03, 0x00, 0x00, 0xff, 0xff, 0xd5, 0xa4, 0x1d, 0x55,
	0xba, 0x02, 0x00, 0x00,
}
